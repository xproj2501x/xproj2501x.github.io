/**
 * Assemblage
 * ===
 *
 * @module ecs.Assemblage
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////
/**
 * Assemblage
 * @class
 */
class Assemblage {

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  /**
   * The id of the parent entity.
   * @private
   * @type {number}
   */
  _id;

  /**
   * The key of the parent entity.
   * @private
   * @type {number}
   */
  _key;

  /**
   * @private
   * @type {Component[]}
   */
  _components;

  /**
   * @private
   * @type {Event[]}
   */
  _events;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  /**
   * Assemblage
   * @constructor
   * @param {number} id - The id of the parent entity.
   * @param {number} key - The key of the parent entity.
   */
  constructor(id, key) {
    this._id = id;
    this._key = key;
    this._components = [];
    this._events = [];
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////

  /**
   * Static factory method.
   * @static
   * @param {number} id - The id of the parent entity.
   * @param {number} key - The key of the parent entity.
   *
   * @return {Assemblage} .
   */
  static createInstance(id, key) {
    return new Assemblage(id, key);
  }
}

////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default Assemblage;
