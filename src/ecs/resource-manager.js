/**
 * ResourceManager
 * ===
 *
 * @module ecs.ResourceManager
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////
/**
 * ResourceManager
 * @class
 */
class ResourceManager {

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  /**
   * A collection of resources used by the simulation.
   * @private
   * @type {object}
   */
  _resources;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  /**
   * ResourceManager
   * @constructor
   */
  constructor() {
    this._resources = {};
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////
  /**
   * Registers a new resource with the manager.
   * @public
   * @param {string} id - The id of the resource.
   * @param {object} resource - The resource.
   */
  registerResource(id, resource) {
    this._resources[id] = resource;
  }

  /**
   * Finds the resource with the specified id.
   * @public
   * @param {string} id - The id of the resource.
   *
   * @return {object}
   */
  findResource(id) {
    return this._resources[id];
  }

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////

  /**
   * Static factory method.
   * @static
   *
   * @return {ResourceManager}
   */
  static createInstance() {
    return new ResourceManager();
  }
}

////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default ResourceManager;
