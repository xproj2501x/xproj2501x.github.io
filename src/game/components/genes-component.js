/**
 * Genes Component
 * ===
 *
 * @module game.Components.GenesComponent
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////
import Component from '../../data-manager/component';

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////
const TEMPLATE = {
  value: 'number',
};

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////
/**
 * GenesComponent
 * @class
 * @extends Component
 */
class GenesComponent extends Component {

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////
  /**
   * @public
   * @reaodnly
   * @return {number}
   */
  get value() {
    return this.state.value;
  }

  get strength() {
    return parseInt(this.state.value.substr(0, 8), 2);
  }

  get endurance() {
    return parseInt(this.state.value.substr(0, 8), 2);
  }

  get intelligence() {

  }

  get speed() {

  }

  get perception() {

  }

  get aggression() {

  }

  /**
   * GenesComponent
   * @constructor
   * @param {number} id - The id of the parent entity.
   * @param {number} type - The type of the component.
   * @param {object} state - The state of the component.
   */
  constructor(id, type, state) {
    super(id, type, state);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////

  /**
   * Static factory method.
   * @static
   * @param {number} id - The id of the parent entity.
   * @param {number} type - The type of the component.
   * @param {object} template - The template for the component.
   * @param {object} state - The state of the component.
   *
   * @return {GenesComponent} A new energy component instance.
   */
  static createInstance(id, type, template, state) {
    return new GenesComponent(id, type, state);
  }
}

////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default GenesComponent;
