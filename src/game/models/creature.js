/**
 * Creature
 * ===
 *
 * @module game.Models.Creature
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////
const MUTATION_RATE = 0.01;

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////
/**
 * Creature
 * @class
 */
class Creature {

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  /**
   * @private
   * @type {string}
   */
  _genes;
  _x;
  _y;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////
  get genes() {
    return this._genes;
  }

  get x() {
    return this._x;
  }

  get y() {
    return this._y;
  }

  /**
   * Creature
   * @constructor
   */
  constructor(genes, x, y) {
    this._genes = genes;
    this._x = x;
    this._y = y;
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////
  reproduce(creature) {

  }

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////
  /**
   * Static factory method.
   * @static
   *
   * @return {Creature} A new screen instance.
   */
  static createInstance(genes, x, y) {
    return new Creature(genes, x, y);
  }
}

////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default Creature;
