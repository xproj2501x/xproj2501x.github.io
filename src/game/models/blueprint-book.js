/**
 * BlueprintBook
 * ===
 *
 * @module game.Models.BlueprintBook
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////
/**
 * BlueprintBook
 * @class
 */
class BlueprintBook {

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////

  /**
   * @private
   * @type {number}
   */
  _version;

  /**
   * @private
   * @type {string}
   */
  _name;

  /**
   * @private
   * @type {number}
   */
  _activeIndex;

  /**
   * @private
   * @type {array}
   */
  _blueprints;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  /**
   * BlueprintBook
   * @constructor
   */
  constructor() {
    this._blueprints = [];
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////
  /**
   * Static factory method.
   * @static
   *
   * @return {BlueprintBook} A new BlueprintBook instance.
   */
  static createInstance() {
    return new BlueprintBook();
  }
}

////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default BlueprintBook;
