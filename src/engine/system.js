/**
 * System
 * ===
 *
 * @module system
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////
import {EVENT} from './constants';

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////
/**
 * System
 * @interface
 */
class System {

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  _logger;

  /**
   * @protected
   * @type {MessageService}
   */
  _messageService;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  /**
   * System
   * @constructor
   * @param {MessageService} messageService -
   */
  constructor(messageService) {
    this._messageService = messageService;
    this._messageService.subscribe(EVENT.COMPONENT_CREATED, (message) => this.onComponentCreated(message));
    this._messageService.subscribe(EVENT.COMPONENT_DESTROYED, (message) => this.onComponentDestroyed(message));
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////
  /**
   * Runs the update routine for the system
   * @abstract
   */
  update() {
    throw new Error('Error: update method called from base class');
  }

  onComponentCreated(message) {

  }

  onComponentDestroyed(message) {

  }

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default System;
