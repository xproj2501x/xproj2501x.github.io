/**
 * Linked List Node
 * ===
 *
 * @module linkedListNode
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////

/**
 * LinkedListNode
 * @class
 */
class LinkedListNode {

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  /**
   * The data for the node.
   * @private
   * @type {object}
   */
  _data;

  /**
   * The next element in the linked list.
   * @private
   * @type {LinkedListNode}
   */
  _nextNode;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////
  /**
   * @public
   * @readonly
   * @return {object} The data for the node.
   */
  get data() {
    return this._data;
  }

  /**
   * @public
   * @readonly
   * @return {LinkedListNode}
   */
  get nextNode() {
    return this._next;
  }

  /**
   * @public
   * @param node
   */
  set nextNode(node) {
    this._next = node;
  }

  /**
   * LinkedListNode
   * @constructor
   * @param {object} data - The data for the node.
   */
  constructor(data) {
    this._data = data;
    this._nextNode = null;
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////


  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////
  /**
   * Static factory method.
   * @static
   * @param {object} data - The data for the node.
   *
   * @return {LinkedListNode} A new linked list node instance.
   */
  static createInstance(data) {
    return new LinkedListNode(data);
  }
}

////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default LinkedListNode;
